name: 4testing multiarch-build

on:
  push:
    branches: 
      - 'feature/test-tag'
env:
    DATE: ""
    DOCKER_PATH: "/build/install/docker"
    REPO: "lemmav"
    DOCKERFILE: "Dockerfile.app"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64]
    concurrency: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build 4testing
        run: |
          cd .${DOCKER_PATH}
          
          export DOCKER_TAG=$(echo "${GITHUB_REF_NAME}" | sed '/^release\b\|^hotfix\b\|^feature\b/s/release.*\/\|hotfix.*\/\|feature.*\///')
          
          docker buildx bake -f build.yml \
          --set *.args.GIT_BRANCH=$GITHUB_REF_NAME \
          --set *.platform=linux/amd64 \
          --load
          
          TAG=$(date "+%Y%m%d%H")
      

          echo "DOCKER_IMAGES for taggig"

          DOCKER_IMAGES=$(docker images --format "{{.Repository}}:{{.Tag}}")

          echo "Finished DOCKER_IMAGES"

          echo "DOCKER_IMAGES=$DOCKER_IMAGES"

          MY_DOCKER_IMAGES=$(echo $DOCKER_IMAGES | grep $REPO)

          for $IMAGE in $MY_DOCKER_IMAGES; do

            echo "NEW_IMAGE for taggig"
            NEW_IMAGE=$IMAGE-$TAG

            docker push $IMAGE
            echo "docker tag for taggig"
            docker tag $IMAGE $NEW_IMAGE

            echo "docker push for taggig"
            docker push $NEW_IMAGE
          done

        shell: bash
